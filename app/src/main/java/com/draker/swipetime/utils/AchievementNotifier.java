package com.draker.swipetime.utils;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.os.Build;

import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

import com.draker.swipetime.MainActivity;
import com.draker.swipetime.R;
import com.draker.swipetime.database.entities.AchievementEntity;
import com.draker.swipetime.database.entities.CollectibleItemEntity;
import com.draker.swipetime.database.entities.DailyQuestEntity;
import com.draker.swipetime.database.entities.SeasonalEventEntity;
import com.draker.swipetime.database.entities.ThematicChallengeEntity;
import com.draker.swipetime.database.entities.UserRankEntity;

/**
 * –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
public class AchievementNotifier implements GamificationManager.OnAchievementListener {

    private static final String CHANNEL_ID = "achievement_channel";
    private static final String CHANNEL_NAME = "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è";
    private static final String CHANNEL_DESCRIPTION = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è";
    
    // ID –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    private static final int ACHIEVEMENT_NOTIFICATION_ID = 1001;
    private static final int LEVEL_UP_NOTIFICATION_ID = 2001;
    private static final int QUEST_NOTIFICATION_ID = 3001;
    private static final int EVENT_NOTIFICATION_ID = 4001;
    private static final int ITEM_NOTIFICATION_ID = 5001;
    private static final int CHALLENGE_NOTIFICATION_ID = 6001;
    private static final int RANK_NOTIFICATION_ID = 7001;
    
    private final Context context;
    
    public AchievementNotifier(Context context) {
        this.context = context.getApplicationContext();
        createNotificationChannel();
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è Android 8.0+)
     */
    private void createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(
                    CHANNEL_ID,
                    CHANNEL_NAME,
                    NotificationManager.IMPORTANCE_DEFAULT);
            
            channel.setDescription(CHANNEL_DESCRIPTION);
            
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª –≤ —Å–∏—Å—Ç–µ–º–µ
            NotificationManager notificationManager = context.getSystemService(NotificationManager.class);
            if (notificationManager != null) {
                notificationManager.createNotificationChannel(channel);
            }
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
     */
    @Override
    public void onAchievementUnlocked(AchievementEntity achievement, int experienceGained) {
        showAchievementUnlocked(achievement, experienceGained);
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
     */
    @Override
    public void onLevelUp(int newLevel, int experienceGained) {
        showLevelUp(newLevel, experienceGained);
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
     */
    public void showAchievementUnlocked(AchievementEntity achievement, int experienceGained) {
        // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_achievements", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        // –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Å—É—Ä—Å–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        int iconResourceId = getAchievementIconResourceId(achievement.getIconUrl());
        
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification) // –ò–∫–æ–Ω–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                .setContentTitle("üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!")
                .setContentText(achievement.getTitle())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(achievement.getDescription() + "\n+" + experienceGained + " –æ–ø—ã—Ç–∞"))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(ACHIEVEMENT_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
     */
    public void showLevelUp(int newLevel, int experienceGained) {
        // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_profile", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        // –ü–æ–ª—É—á–∞–µ–º –∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
        String rank = XpLevelCalculator.getLevelRank(newLevel);
        
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification) // –ò–∫–æ–Ω–∫–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
                .setContentTitle("‚¨ÜÔ∏è –£—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω!")
                .setContentText("–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ " + newLevel + " —É—Ä–æ–≤–Ω—è")
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ " + newLevel + " —É—Ä–æ–≤–Ω—è.\n" +
                                "–ù–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ: " + rank + "\n+" + 
                                experienceGained + " –æ–ø—ã—Ç–∞."))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(LEVEL_UP_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
     */
    public void showQuestCompleted(DailyQuestEntity quest, int experienceGained) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_quests", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
                .setContentText(quest.getTitle())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(quest.getDescription() + "\n+" + experienceGained + " –æ–ø—ã—Ç–∞"))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(QUEST_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–µ–∑–æ–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
     */
    public void showEventStarted(SeasonalEventEntity event) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_events", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("üéâ –ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ!")
                .setContentText(event.getTitle())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(event.getDescription() + "\n–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–µ–π—á–∞—Å!"))
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(EVENT_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ–∑–æ–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
     */
    public void showEventEnded(SeasonalEventEntity event) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("üé≠ –°–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
                .setContentText(event.getTitle())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText("–°–æ–±—ã—Ç–∏–µ \"" + event.getTitle() + "\" –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!"))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(EVENT_NOTIFICATION_ID + 1, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
     */
    public void showItemObtained(CollectibleItemEntity item, String source) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_collection", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        String sourceText = getSourceDisplayName(source);
        String rarityEmoji = getRarityEmoji(item.getRarity());
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("üíé –ù–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç!")
                .setContentText(rarityEmoji + " " + item.getName())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(item.getDescription() + "\n–ò—Å—Ç–æ—á–Ω–∏–∫: " + sourceText + 
                                "\n–†–µ–¥–∫–æ—Å—Ç—å: " + item.getRarityText()))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(ITEM_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—ã—Ç–∞–Ω–∏—è
     */
    public void showChallengeCompleted(ThematicChallengeEntity challenge, int experienceGained) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_challenges", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("üö© –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
                .setContentText(challenge.getTitle())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(challenge.getDescription() + "\n+" + experienceGained + " –æ–ø—ã—Ç–∞"))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(CHALLENGE_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —Ä–∞–Ω–≥–∞
     */
    public void showRankUnlocked(UserRankEntity rank, int experienceGained) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_ranks", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("üëë –ù–æ–≤—ã–π —Ä–∞–Ω–≥!")
                .setContentText(rank.getName())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(rank.getDescription() + "\n+" + experienceGained + " –æ–ø—ã—Ç–∞" +
                                "\n–ë–æ–Ω—É—Å –∫ –æ–ø—ã—Ç—É: +" + ((rank.getBonusXpMultiplier() - 1.0f) * 100) + "%"))
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(RANK_NOTIFICATION_ID, builder.build());
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–∞–Ω–≥–∞
     */
    public void showRankActivated(UserRankEntity rank) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("show_profile", true);
        
        PendingIntent pendingIntent = PendingIntent.getActivity(
                context,
                0,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_notification)
                .setContentTitle("‚≠ê –†–∞–Ω–≥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
                .setContentText(rank.getName())
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText("–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–∞–Ω–≥: " + rank.getName() + "\n" +
                                rank.getDescription() + 
                                "\n–ë–æ–Ω—É—Å –∫ –æ–ø—ã—Ç—É: +" + ((rank.getBonusXpMultiplier() - 1.0f) * 100) + "%"))
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);
        
        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
        notificationManager.notify(RANK_NOTIFICATION_ID + 1, builder.build());
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å ID —Ä–µ—Å—É—Ä—Å–∞ –∏–∫–æ–Ω–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
     * 
     * @param iconName –∏–º—è –∏–∫–æ–Ω–∫–∏
     * @return ID —Ä–µ—Å—É—Ä—Å–∞
     */
    private int getAchievementIconResourceId(String iconName) {
        // –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Å—É—Ä—Å–∞ –ø–æ –∏–º–µ–Ω–∏
        int resourceId = context.getResources().getIdentifier(
                iconName, "drawable", context.getPackageName());
        
        // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∫–æ–Ω–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if (resourceId == 0) {
            resourceId = R.drawable.ic_notification;
        }
        
        return resourceId;
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
     * @param source –∏—Å—Ç–æ—á–Ω–∏–∫
     * @return –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
     */
    private String getSourceDisplayName(String source) {
        switch (source) {
            case "starter":
                return "–ù–æ–≤–∏—á–∫—É";
            case "achievement":
                return "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ";
            case "quest":
                return "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ";
            case "challenge":
                return "–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ";
            case "event":
                return "–°–µ–∑–æ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ";
            case "rank":
                return "–†–∞–Ω–≥";
            case "purchase":
                return "–ü–æ–∫—É–ø–∫–∞";
            default:
                return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫";
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–¥–∫–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
     * @param rarity —É—Ä–æ–≤–µ–Ω—å —Ä–µ–¥–∫–æ—Å—Ç–∏ (1-5)
     * @return —ç–º–æ–¥–∑–∏
     */
    private String getRarityEmoji(int rarity) {
        switch (rarity) {
            case 1:
                return "‚ö™"; // –û–±—ã—á–Ω—ã–π
            case 2:
                return "üîµ"; // –†–µ–¥–∫–∏–π
            case 3:
                return "üü£"; // –≠–ø–∏—á–µ—Å–∫–∏–π
            case 4:
                return "üü°"; // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π
            case 5:
                return "üî¥"; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π
            default:
                return "‚ö´"; // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π
        }
    }
}
