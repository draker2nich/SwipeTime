package com.draker.swipetime.utils;

import android.content.Context;
import android.util.Log;

import androidx.annotation.NonNull;

import com.draker.swipetime.R;
import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GoogleApiAvailability;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.FirebaseFirestoreSettings;

/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase
 */
public class FirebaseDiagnostics {

    private static final String TAG = "FirebaseDiagnostics";
    
    /**
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     * @param context –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @return –æ—Ç—á–µ—Ç –æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ
     */
    public static DiagnosticsReport runFullDiagnostics(@NonNull Context context) {
        DiagnosticsReport report = new DiagnosticsReport();
        
        Log.d(TAG, "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Firebase");
        
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Play Services
        report.googlePlayServicesAvailable = checkGooglePlayServices(context);
        
        // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase Auth
        report.firebaseAuthConfigured = checkFirebaseAuth();
        
        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Firestore
        report.firestoreConfigured = checkFirestore();
        
        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sign-In –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        report.googleSignInConfigured = checkGoogleSignInConfig(context);
        
        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        report.userSignedIn = checkCurrentUser();
        
        // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        report.networkAvailable = NetworkHelper.getInstance(context).isInternetAvailable();
        
        // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Web Client ID
        report.webClientIdValid = checkWebClientId(context);
        
        Log.d(TAG, "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: " + report.getOverallStatus());
        
        return report;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Google Play Services
     */
    private static boolean checkGooglePlayServices(Context context) {
        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();
        int resultCode = googleApiAvailability.isGooglePlayServicesAvailable(context);
        boolean available = resultCode == ConnectionResult.SUCCESS;
        
        Log.d(TAG, "Google Play Services –¥–æ—Å—Ç—É–ø–Ω—ã: " + available + 
                (available ? "" : " (–∫–æ–¥ –æ—à–∏–±–∫–∏: " + resultCode + ")"));
        
        return available;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase Auth
     */
    private static boolean checkFirebaseAuth() {
        try {
            FirebaseAuth auth = FirebaseAuth.getInstance();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Auth –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            auth.getCurrentUser(); // –≠—Ç–æ—Ç –≤—ã–∑–æ–≤ –ø–æ–∫–∞–∂–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ Auth
            Log.d(TAG, "Firebase Auth —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω: true");
            return true;
        } catch (Exception e) {
            Log.e(TAG, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Firebase Auth", e);
            return false;
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firestore
     */
    private static boolean checkFirestore() {
        try {
            FirebaseFirestore firestore = FirebaseFirestore.getInstance();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Firestore –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
            FirebaseFirestoreSettings settings = firestore.getFirestoreSettings();
            Log.d(TAG, "Firestore –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ");
            Log.d(TAG, "Firestore —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω: true");
            return true;
        } catch (Exception e) {
            Log.e(TAG, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Firestore", e);
            return false;
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Google Sign-In
     */
    private static boolean checkGoogleSignInConfig(Context context) {
        try {
            GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(context);
            Log.d(TAG, "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ—à–µ–¥—à–∏–π –∞–∫–∫–∞—É–Ω—Ç Google: " + 
                    (account != null ? account.getEmail() : "null"));
            return true; // –°–∞–º–æ API –¥–æ—Å—Ç—É–ø–Ω–æ
        } catch (Exception e) {
            Log.e(TAG, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Google Sign-In", e);
            return false;
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private static boolean checkCurrentUser() {
        try {
            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
            boolean signedIn = user != null;
            
            if (signedIn) {
                Log.d(TAG, "–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.getUid() + " (" + user.getEmail() + ")");
                Log.d(TAG, "–ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: " + user.getProviderData().size() + " –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤");
            } else {
                Log.d(TAG, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É");
            }
            
            return signedIn;
        } catch (Exception e) {
            Log.e(TAG, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", e);
            return false;
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ Web Client ID
     */
    private static boolean checkWebClientId(Context context) {
        try {
            String webClientId = context.getString(R.string.default_web_client_id);
            boolean valid = webClientId.contains(".apps.googleusercontent.com") &&
                          webClientId.startsWith("305522930969-") && // –ù–∞—á–∞–ª–æ –≤–∞—à–µ–≥–æ project number
                          webClientId.equals("305522930969-tk9vj77cqfnplae8ms5tesurd2oh1mir.apps.googleusercontent.com"); // –¢–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
            
            Log.d(TAG, "Web Client ID: " + webClientId);
            Log.d(TAG, "Web Client ID –≤–∞–ª–∏–¥–µ–Ω: " + valid);
            
            return valid;
        } catch (Exception e) {
            Log.e(TAG, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Web Client ID", e);
            return false;
        }
    }
    
    /**
     * –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
     */
    public static class DiagnosticsReport {
        public boolean googlePlayServicesAvailable = false;
        public boolean firebaseAuthConfigured = false;
        public boolean firestoreConfigured = false;
        public boolean googleSignInConfigured = false;
        public boolean userSignedIn = false;
        public boolean networkAvailable = false;
        public boolean webClientIdValid = false;
        
        /**
         * –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
         */
        public boolean isSystemReady() {
            return googlePlayServicesAvailable && 
                   firebaseAuthConfigured && 
                   firestoreConfigured && 
                   googleSignInConfigured && 
                   networkAvailable &&
                   webClientIdValid;
        }
        
        /**
         * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
         */
        public String getOverallStatus() {
            if (isSystemReady()) {
                return "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ" + (userSignedIn ? " (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª)" : " (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à–µ–ª)");
            } else {
                return "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞. –ü—Ä–æ–±–ª–µ–º—ã: " + getProblems();
            }
        }
        
        /**
         * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º
         */
        public String getProblems() {
            StringBuilder problems = new StringBuilder();
            
            if (!googlePlayServicesAvailable) problems.append("Google Play Services –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã; ");
            if (!firebaseAuthConfigured) problems.append("Firebase Auth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω; ");
            if (!firestoreConfigured) problems.append("Firestore –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω; ");
            if (!googleSignInConfigured) problems.append("Google Sign-In –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω; ");
            if (!networkAvailable) problems.append("–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É; ");
            if (!webClientIdValid) problems.append("–ù–µ–≤–µ—Ä–Ω—ã–π Web Client ID; ");
            
            return problems.toString();
        }
        
        /**
         * –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
         */
        public String getDetailedReport() {
            return String.format(
                "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê FIREBASE\n" +
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n" +
                "Google Play Services: %s\n" +
                "Firebase Auth: %s\n" +
                "Firestore: %s\n" +
                "Google Sign-In: %s\n" +
                "Web Client ID: %s\n" +
                "–°–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: %s\n" +
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª: %s\n" +
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n" +
                "–°–¢–ê–¢–£–°: %s",
                formatStatus(googlePlayServicesAvailable),
                formatStatus(firebaseAuthConfigured),
                formatStatus(firestoreConfigured),
                formatStatus(googleSignInConfigured),
                formatStatus(webClientIdValid),
                formatStatus(networkAvailable),
                formatStatus(userSignedIn),
                getOverallStatus()
            );
        }
        
        private String formatStatus(boolean status) {
            return status ? "‚úÖ –û–ö" : "‚ùå –ü–†–û–ë–õ–ï–ú–ê";
        }
    }
}